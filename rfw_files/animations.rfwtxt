import core.widgets;
import material;
import local;

widget Main = Scaffold(
  appBar: _AppBar(),
  body:  Padding(
    padding: [20.0, 20.0],
    child: Wrap(
      spacing: 10,
      runSpacing: 10,
      children: [
        Demo(
          title: 'AnimatedContainer',
          child: FancyAnimatedContainer(),
        ),
        Demo(
          title: 'AnimatedAlign',
          child: FancyAnimatedAlign(),
        ),
        Demo(
          title: 'AnimatedDefaultTextStyle',
          child: FancyAnimatedDefaultTextStyle(),
        ),
        Demo(
          title: 'AnimatedScale',
          child: FancyAnimatedScale(),
        ),
        Demo(
          title: 'TweenAnimationBuilder',
          child: FancyTweenAnimationBuilder(),
        ),
      ],
    ),
  ),
);

widget _AppBar = AppBar(
  title: Text(text: 'Animations'),
);

widget Demo = Container(
  decoration: {
    type: 'box',
    border: [{x: 0}],
  },
  child: Column(
    children: [
      Text(text: args.title),
      args.child,
    ]
  ),
);

widget FancyAnimatedContainer {down: false} = GestureDetector(
  onTapDown: set state.down = true,
  onTapUp: set state.down = false,
  onTapCancel: set state.down = false,
  child: Container(
    color: switch state.down {
      false: 0xFF2196F3,
      true: 0xFFF44336,
    },
    width: switch state.down {
      false: 250.0,
      true: 300,
    },
    height: switch state.down {
      false: 250.0,
      true: 300,
    },
    child: Center(
      child: Text(
        text: switch state.down {
          false: 'Press and hold',
          true: 'Release',
        },
      ),
    ),
  ),
);

widget FancyAnimatedAlign {alignment: 'topRight'} = GestureDetector(
  onTap: set state.alignment = switch state.alignment {
    'topRight': 'bottomRight',
    'bottomRight': 'bottomLeft',
    'bottomLeft': 'topLeft',
    'topLeft': 'topRight',
  },
  child: Container(
    width: 250.0,
    height: 250.0,
    color: 0xFFCDDC39,
    child: AnimatedAlign(
      alignment: {
        x: switch state.alignment {
          'topRight': 1,
          'bottomRight': 1,
          'bottomLeft': -1,
          'topLeft': -1,
        },
        y: switch state.alignment {
          'topRight': -1,
          'bottomRight': 1,
          'bottomLeft': 1,
          'topLeft': -1,
        },
      },
      child: FlutterLogo(size: 50),
    ),
  ),
);

widget FancyAnimatedDefaultTextStyle {toggle: false} = GestureDetector(
  onTap: set state.toggle = switch state.toggle {
    true: false,
    false: true,
  },
  child: Container(
    width: 250.0,
    height: 250.0,
    color: 0xFF2196F3,
    child: Center(
      child: AnimatedDefaultTextStyle(
        style: switch state.toggle {
          false: {
            fontSize: 15,
          },
          true: {
            color: 0xFFFFFFFF,
            fontFamily: 'GoogleSansFlex',
            fontSize: 50,
            fontWeight: 'bold',
          },
        },
        child: Text(text: 'Tap!'),
      ),
    ),
  ),
);


widget FancyAnimatedScale {scale: 0.5} = GestureDetector(
  onTap: set state.scale = switch state.scale {
    0.5: 1,
    1: 0.5,
  },
  child: Container(
    width: 250.0,
    height: 250.0,
    color: 0xFFCDDC39,
    child: AnimatedScale(
      scale: state.scale,
      child: FlutterLogo(),
    ),
  ),
);

widget FancyTweenAnimationBuilder {action: 'grow'} = GestureDetector(
  onTap: set state.action = switch state.action {
    'grow': 'shrink',
    'shrink': 'grow',
  },
  child: Container(
    width: 250.0,
    height: 250.0,
    child: Stack(
      children: [
        Center(
          child: TweenAnimationBuilder(
            begin: switch state.action {
              'grow': 0.0,
              'shrink': 250.0,
            },
            end: switch state.action {
              'grow': 250.0,
              'shrink': 0.0,
            },
            duration: 2000,
            builder: (result) => Container(
              width: result.value,
              height: result.value,
              color: 0xFF2196F3,
            ),
          ),
        ),
        Center(child: Text(text: 'Tap')),
      ],
    ),
  ),
);
